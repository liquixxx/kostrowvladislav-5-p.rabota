//ISTO4NIK: https://ru.wikibooks.org/wiki/%D0%A0%D0%B5%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8_%D0%B0%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%D0%BE%D0%B2/%D0%A1%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0/%D0%A8%D0%B5%D0%BB%D0%BB%D0%B0

void sort_shell(int[] a){
   // Объявление переменных:
   // i, j - счетчики циклов, k - текущий шаг сортировки, h - временное хранение элемента
   // m - индекс в последовательности шагов, b - длина массива
   int i, j, k, h, m=0, b=a.length;
   
   // Последовательность шагов (intervals) Марцина Циура - одна из лучших для сортировки Шелла
   int[] d = { 1, 4, 10, 23, 57, 145, 356, 911, 1968, 4711, 11969, 27901,
               84801, 213331, 543749, 1355339, 3501671, 8810089, 21521774,
               58548857, 157840433, 410151271, 1131376761, 2147483647 };
   
   // Находим подходящий начальный шаг: ищем первый шаг, который больше длины массива
   while (d[m] < b) ++m;
   
   // Основной цикл: проходим по всем шагам от большего к меньшему
   while (--m >= 0){
      k = d[m]; // Текущий шаг сортировки
      
      // k-сортировка: сортировка вставками с шагом k
      for (i = k; i < b; i++){     
         j = i;        // Текущая позиция для вставки
         h = a[i];     // Сохраняем текущий элемент
         
         // Сдвигаем элементы, которые больше h, на k позиций вправо
         while ((j >= k) && (a[j-k] > h)){
              a[j] = a[j-k]; // Сдвигаем элемент на k позиций вправо
              j -= k;        // Переходим к предыдущему элементу с шагом k
         }
         
         // Вставляем сохраненный элемент на найденную позицию
         a[j] = h;
      }
   }
}
