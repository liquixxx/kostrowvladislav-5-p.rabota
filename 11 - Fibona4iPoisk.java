//ISTO4NIK: https://devmark.ru/article/fibonacci-algorithm-java-kotlin

public long getFibonacciByIndex(int index) {
    // Проверка базового случая: F(0) = 0
    if (index == 0) {
        return 0; // первый элемент последовательности Фибоначчи
    }
    
    // Проверка корректности индекса
    // index < 0 - отрицательные индексы недопустимы
    // index > 92 - при index = 93 происходит переполнение типа long
    // F(92) = 7540113804746346429 (еще влезает в long)
    // F(93) = 12200160415121876738 (превышает Long.MAX_VALUE = 9223372036854775807)
    if (index < 0 || index > 92) {
        throw new IndexOutOfBoundsException(index);
    }
    
    // Инициализация первых двух чисел Фибоначчи
    long n0 = 0L; // F(0) = 0
    long n1 = 1L; // F(1) = 1
    
    // Итеративное вычисление чисел Фибоначчи
    // Начинаем с i=2, так как F(0) и F(1) уже известны
    for (int i = 2; i <= index; i++) {
        // Вычисляем следующее число Фибоначчи: F(n) = F(n-1) + F(n-2)
        long n2 = n0 + n1;
        
        // Сдвигаем значения для следующей итерации
        n0 = n1; // Теперь n0 = F(n-1)
        n1 = n2; // Теперь n1 = F(n)
    }
    
    // Возвращаем вычисленное число Фибоначчи
    return n1;
}
